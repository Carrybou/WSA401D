{% extends 'base.html.twig' %}

{% block title %}Météo{% endblock %}

{% block body %}
    <div class="pre-info-btn">
        <form class="form-search" method="post" action="{{ path('weather_home') }}">
            <label for="city">Ville :</label>
            <input type="text" id="city" name="city" value="{{ selectedCity }}" required>
            <button class="search" type="submit">Rechercher</button>
        </form>

        {% if app.user %}
            {% if selectedCity in favoriteCities %}
                <form method="post" action="{{ path('weather_home') }}">
                    <input type="hidden" name="city" value="{{ selectedCity }}">
                    <input type="hidden" name="favorite_action" value="remove">
                    <button type="submit" class="btn-favorite btn-favorite-R">Retirer des favoris ♡</button>
                </form>
            {% else %}
                <form method="post" action="{{ path('weather_home') }}">
                    <input type="hidden" name="city" value="{{ selectedCity }}">
                    <input type="hidden" name="favorite_action" value="add">
                    <button type="submit" class="btn-favorite btn-favorite-A">Ajouter aux favoris ♥</button>
                </form>
            {% endif %}
        {% endif %}
    </div>

    {% if error %}
        <div class="error" id="error-message">{{ error|raw }}</div>
    {% endif %}

    {% if weatherData is defined and weatherData[selectedCity] is defined %}
        <h1>Météo à {{ selectedCity }}</h1>
        <p>La température actuelle est de {{ weatherData[selectedCity].temperature }}°C.</p>
        <h2>Prévisions sur 5 jours / 3 heures</h2>
        {% for item in weatherData[selectedCity].forecast %}
            <div>
                <p>Date : {{ item.dt_txt }}</p>
                <p>Météo : {{ item.weather[0].description }}</p>
            </div>
        {% endfor %}
    {% else %}
        <p>Pas de données météorologiques disponibles.</p>
    {% endif %}

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            var errorMessage = document.getElementById('error-message');
            if (errorMessage) {
                errorMessage.addEventListener('click', function() {
                    errorMessage.style.display = 'none';
                });
            }

            if (!"{{ selectedCity }}" && navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(function(position) {
                    var lat = position.coords.latitude;
                    var lon = position.coords.longitude;
                    fetch(`https://api.bigdatacloud.net/data/reverse-geocode-client?latitude=${lat}&longitude=${lon}&localityLanguage=en`)
                        .then(response => response.json())
                        .then(data => {
                            var city = data.city || data.locality || data.principalSubdivision;
                            if (city) {
                                document.getElementById('city').value = city;
                                document.querySelector('.form-search').submit();
                            }
                        })
                        .catch(error => {
                            console.error('Error retrieving location:', error);
                        });
                }, function(error) {
                    console.error('Geolocation error:', error);
                });
            }
        });
    </script>
{% endblock %}
